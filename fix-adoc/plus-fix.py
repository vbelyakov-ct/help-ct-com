import os
import re

def удалить_пробел_перед_плюсом(путь_к_файлу):
    """
    Ищет в файле последовательность " +" и удаляет пробел.

    Args:
        путь_к_файлу: Путь к файлу, в котором нужно произвести замену.
    """
    try:
        with open(путь_к_файлу, 'r+') as файл:
            содержимое = файл.read()
            изменено = содержимое.replace(' +', '+')
            if изменено != содержимое:
                файл.seek(0)
                файл.write(изменено)
                файл.truncate()
                print(f"В файле '{путь_к_файлу}' удалены пробелы перед плюсами.")
            else:
                print(f"В файле '{путь_к_файлу}' последовательность ' +' не найдена.")
    except FileNotFoundError:
        print(f"Ошибка: Файл '{путь_к_файлу}' не найден.")
    except Exception as e:
        print(f"Произошла ошибка при обработке файла '{путь_к_файлу}': {e}")

def удалить_плюс_не_на_новой_строке(путь_к_файлу):
    """
    Ищет в файле символ плюса, который не находится в начале новой строки, и удаляет его.

    Args:
        путь_к_файлу: Путь к файлу, в котором нужно произвести замену.
    """
    try:
        with open(путь_к_файлу, 'r+') as файл:
            содержимое = файл.read()
            # Регулярное выражение для поиска плюса, которому предшествует любой символ, кроме начала строки
            изменено = re.sub(r'(?<!^)\+', '', содержимое)
            if изменено != содержимое:
                файл.seek(0)
                файл.write(изменено)
                файл.truncate()
                print(f"В файле '{путь_к_файлу}' удалены плюсы, не находящиеся в начале строки.")
            else:
                print(f"В файле '{путь_к_файлу}' плюсы, не находящиеся в начале строки, не найдены.")
    except FileNotFoundError:
        print(f"Ошибка: Файл '{путь_к_файлу}' не найден.")
    except Exception as e:
        print(f"Произошла ошибка при обработке файла '{путь_к_файлу}': {e}")

def обработать_файл_последовательно(путь_к_файлу):
    """
    Последовательно применяет обе функции обработки к файлу.

    Args:
        путь_к_файлу: Путь к файлу для обработки.
    """
    удалить_пробел_перед_плюсом(путь_к_файлу)
    # После первого изменения нужно снова открыть файл для второго прохода
    удалить_плюс_не_на_новой_строке(путь_к_файлу)

def обработать_директорию_последовательно(путь_к_директории):
    """
    Проходит по всем файлам в указанной директории и последовательно применяет обе функции обработки.

    Args:
        путь_к_директории: Путь к директории, которую нужно обработать.
    """
    try:
        файлы = [os.path.join(путь_к_директории, f) for f in os.listdir(путь_к_директории) if os.path.isfile(os.path.join(путь_к_директории, f))]
        for файл in файлы:
            обработать_файл_последовательно(файл)
    except FileNotFoundError:
        print(f"Ошибка: Директория '{путь_к_директории}' не найдена.")
    except Exception as e:
        print(f"Произошла ошибка при обработке директории '{путь_к_директории}': {e}")

if __name__ == "__main__":
    путь_к_директории = input("Введите путь к папке с файлами для обработки: ")
    обработать_директорию_последовательно(путь_к_директории)
